---
#
# Copyright (c) 2019 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to check the target host environment before proceeding to
#   the next step.
#

- name: Check if backup is in progress
  stat:
    path: "{{ backup_in_progress_flag }}"
  register: backup_in_progress

- name: Fail if backup is already in progress
  fail:
    msg: "Backup is already in progress!"
  when: backup_in_progress.stat.exists

- name: Check if it is the active controller
  shell: source /etc/platform/openrc; system host-show $(cat /etc/hostname) | grep -i "Controller-Active"
  register: active_ctlr

- name: Fail if it is not an active controller
  fail:
    msg: "Backup can only be done on the active controller."
  when: active_ctlr.rc != 0

- name: Check disk usage of /home directory
  shell: "du -sh -m  /home | awk '{print $1}'"
  register: home_dir_usage

- name: Fail if disk usage of /home directory is over {{ max_home_dir_usage }}MB
  fail:
    msg: >-
      Directory /home contains more than {{ max_home_dir_usage }}MB of data.
      Please cleanup /home directory and try backup again.
  when: home_dir_usage.stdout|int > max_home_dir_usage

- name: Search for system_mode in /etc/platform/platform.conf
  shell: grep system_mode {{ platform_conf_path }}/platform.conf
  register: check_system_mode

- name: Fail if system_mode is not set in /etc/platform/platform.conf
  fail:
    msg: "system_mode is not set in /etc/platform/platform.conf"
  when: check_system_mode.rc != 0

- name: Check if portieris application is applied
  shell: source /etc/platform/openrc; system application-list | grep -i "portieris" | grep -v "uploaded" || true
  register: portieris_applied

- name: Fail if portieris application is applied
  fail:
    msg: "Unable to take backup when portieris application applied"
  when: portieris_applied.stdout

- name: set system_mode
  set_fact:
    system_mode: "{{ check_system_mode.stdout.split('=')[1] }}"

- name: Set config path facts
  set_fact:
    keyring_permdir: "{{ platform_path }}/.keyring/{{ software_version }}"
    config_permdir: "{{ platform_path }}/config/{{ software_version }}"
    sysinv_permdir: "{{ platform_path }}/sysinv/{{ software_version }}"
    puppet_permdir: "{{ platform_path }}/puppet/{{ software_version }}"
    armada_permdir: "{{ platform_path }}/armada/{{ software_version }}"
    deploy_permdir: "{{ platform_path }}/deploy/{{ software_version }}"
    helm_overrides_permdir: "{{ platform_path }}/helm/{{ software_version }}"
    helm_charts_permdir: "{{ platform_path }}/helm_charts"
    patching_permdir: "/opt/patching"
    patching_repo_permdir: "/www/pages/updates"
    extension_permdir: "/opt/extension"
    dc_vault_permdir: "/opt/dc-vault"
    extra_permdir: "{{ platform_path }}/extra"
    fernet_keys_permdir: "{{ platform_path }}/keystone/fernet-keys"

- name: Check if ceph is configured
  stat:
    path: "{{ ceph_backend_flag }}"
  register: ceph_backend

- name: Create backup in progress flag file
  file:
    path: "{{ backup_in_progress_flag }}"
    state: touch
