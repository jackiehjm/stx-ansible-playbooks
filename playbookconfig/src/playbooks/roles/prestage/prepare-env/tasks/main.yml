---
#
# Copyright (c) 2022-2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is used to validate input and prepare environment on the target host
#   for packages/images prestaging.
#

- name: Fail if software version for images prestaging is not specified
  fail:
    msg: "Please specify software version for prestaging."
  when: software_version is not defined

- name: Fail if software version is not supported for prestaging
  fail:
    msg: >-
      The specified software version {{ software_version }} is not supported.
      Minimum supported release versions for prestage: {{ minimum_supported_release_version_for_prestage }}
  when: software_version is version(minimum_supported_release_version_for_prestage, "<")

- name: Set prestage software version and cleanup directores fact
  set_fact:
    prestage_software_version: "{{ software_version }}"
    cleanup_dirs: "{{ cleanup_dirs|default([]) + [software_version] }}"

- name: Set prestage_os_type
  set_fact:
    prestage_os_type: "{{ 'debian' if prestage_software_version is version('22.12', '>=') else 'centos' }}"

- name: Set prestage dir and subdirectory facts
  set_fact:
    prestage_source: remote
    prestage_dir: "{{ platform_backup_dir }}/{{ prestage_software_version }}"
    patches_prestage_dir: "{{ platform_backup_dir }}/{{ prestage_software_version }}/patches"
    host_patch_metadata_dir: "/opt/patching/metadata"

- name: Retrieve current software version of the host
  shell: source /etc/platform/openrc;
    system show | grep software_version | awk '{print $4}'
  register: current_software_version

- name: Set host_software_version fact
  set_fact:
    host_software_version: "{{ current_software_version.stdout }}"

- name: Change prestage_source to local
  set_fact:
    prestage_source: local
  when: prestage_software_version == host_software_version

- name: Prepare prestaging packages
  include_tasks: prepare-sw-packages-prestage-env.yml
  when: prestage_type == 'packages'

- name: Prepare prestaging images
  include_tasks: prepare-images-prestage-env.yml
  when: prestage_type == 'images'

- name: Prepare platform-backup directory for {{ prestage_type }} prestaging
  include_tasks: cleanup_prestage_dir.yml
  loop: "{{ cleanup_dirs | flatten(1) }}"
  loop_control:
    loop_var: input_dir
  args:
    apply:
      become: yes
