---
#
# Copyright (c) 2022-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# TASKS DESCRIPTION:
#   These tasks clean up the specified directory in preparation for
#   prestage activities.
#

- name: Set prestage cleanup directory facts
  set_fact:
    images_cleanup_dir: "{{ platform_backup_dir}}/{{ input_dir }}"
    patches_cleanup_dir: "{{ platform_backup_dir}}/{{ input_dir }}/patches"

# Cleanup for prestaging packages.
- block:
  # If the patch metadata doesn't exist, which means there's no patch installed on
  # the host, the prestage patch directory, which could be generated at last time of
  # prestage oeration, needs to be cleaned up.
  - name: Delete patches directory ({{ input_dir }})
    file:
      path: "{{ patches_cleanup_dir }}"
      state: absent
    when: not host_patches_exist

  # The following block is dedicated for processing the previous existing prestage data
  # generated by the 22.12 earlier release. In the 22.12 earlier release, the ostree_repo
  # and its md5 file were not versioned. They were put into "/opt/platform-backup" directory
  # directly. The following block is used to move them to the 22.12 versioned prestage
  # directory.
  - block:
    - name: Set versioned prestage directory for 22.12 release
      set_fact:
        prestage_dir_2212: "{{ platform_backup_dir }}/22.12"

    - name: Find previous 22.12 ostree_repo
      stat:
        path: "{{ platform_backup_dir }}/ostree_repo"
      register: previous_2212_ostree_repo

    - block:
      - name: Ensure the 22.12 ostree_repo exists
        file:
          path: "{{ prestage_dir_2212 }}"
          state: directory
          owner: root
          mode: 0755
          recurse: yes

      - name: Move the previous 22.12 ostree_repo and its md5 file to the 22.12 prestage directory
        shell: |
          mv {{ platform_backup_dir }}/ostree_repo {{ prestage_dir_2212 }}
          mv {{ platform_backup_dir }}/.ostree_repo_checksum {{ prestage_dir_2212 }} 2>/dev/null
      when: previous_2212_ostree_repo.stat.exists

  when: prestage_type == "packages"

# Cleanup for prestaging images
- block:
  - name: Check if {{ images_cleanup_dir }} exists
    stat:
      path: "{{ images_cleanup_dir }}"
    register: check_images_cleanup_dir

  - block:
    - name: Find images archive and md5 files
      find:
        paths: "{{ images_cleanup_dir }}"
        patterns: "*.tar.gz,*.tar.gz.md5,*.tgz"
      register: find_result

    - name: Clean up {{ input_dir }} images archive and md5 files
      file:
        path: "{{ item['path'] }}"
        state: absent
      with_items: "{{ find_result['files'] }}"
    when: check_images_cleanup_dir.stat.exists

  when: prestage_type == "images"

# Cleanup old release(s) prestage data
- name: Find prestage release subdirectories under {{ platform_backup_dir }}
  find:
    paths: "{{ platform_backup_dir }}"
    file_type: directory
  register: prestage_release_subdirs

- name: Clean up old release(s) (lower than {{ minimum_supported_release_version }}) prestage data
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ prestage_release_subdirs.files }}"
  when: item.path.split('/')[-1] is regex("^[1-9]\d.[0-9]\d$") and
        item.path.split('/')[-1] is version(minimum_supported_release_version, "<")
