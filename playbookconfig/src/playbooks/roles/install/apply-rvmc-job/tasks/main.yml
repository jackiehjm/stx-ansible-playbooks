---
#
# Copyright (c) 2022-2023 This code was extracted from the original install.yml file
# contributed by Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to apply the k8s rvmc job. Note that the rvmc namespace and
#   registry secret are already set up by the dcmanager when this role is executed.

- set_fact:
    rvmc_resource_file: "{{ rvmc_config_dir }}/rvmc.yaml"
    rvmc_image: "{{ rvmc_image | default('docker.io/starlingx/rvmc') }}"
    rvmc_config_file: "{{ rvmc_config_dir }}/rvmc-config.yaml"
    pod_schedule_time: "{{ pod_schedule_time | default(60) }}"
    # To accommodate retries in the rvmc scripts, we've configured
    # the job_wait_time to be 15 minutes. If the rvmc script doesn't
    # exit within that time frame, we'll continue waiting for another
    # 15 minutes, allowing the rvmc script a maximum execution time of
    # half an hour.
    job_wait_time: "{{ job_wait_time | default(900) }}"
    rvmc_namespace: "rvmc"
    credential_failure: false
    failure_msg: ""

- name: Clean up the Redfish Virtual Media Controller from previous run if it has not been cleaned automatically
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf -n {{ rvmc_namespace }} delete job {{ rvmc_name }}"
  register: deleted_job
  failed_when: false
  no_log: true

- name: Wait for 60 seconds to ensure Redfish Virtual Media Controller pods are terminated
  wait_for:
    timeout: 60
  when: deleted_job.rc == 0

- name: Create Redfish Virtual Media Controller resource file
  template:
    src: "roles/install/templates/rvmc.yaml.j2"
    dest: "{{ rvmc_resource_file }}"

- name: Activate Redfish Virtual Media Controller
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f {{ rvmc_resource_file }}"

- name: Wait for {{ job_wait_time }} seconds for Redfish Virtual Media Controller to complete or fail
  script: roles/install/files/k8s-job-state-check.sh {{ rvmc_name }} {{ rvmc_namespace }} {{ job_wait_time }}
  register: wait_for_rvmc
  until: wait_for_rvmc.rc == 0
  # If the script returns a "timeout" status, indicating that the job is still
  # running, continue waiting for an additional period of time.
  # The k8s-job-state-check.sh script returns a non-zero status code only
  # in the event of a job timeout. If the job fails or is not found,
  # the install playbook will initiate a retry by re-running this entire role.
  retries: 1
  failed_when: false

- name: Print the job status
  debug:
    msg: "{{ wait_for_rvmc.stdout }}"

- block:
  - name: Get Redfish Virtual Media Controller logs after the job is completed or failed
    command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf -n {{ rvmc_namespace }} logs job/{{ rvmc_name }}"
    register: rvmc_job_logs

  - debug:
      msg: "{{ rvmc_job_logs.stdout }}"

  # Block to isolate failure message from rvmc pod
  - block:
    - name: Set credential failure flag
      set_fact:
        credential_failure: true
        failure_msg: >-
          Credential failure.
          Action: Check BMC username and password in config file
      when: '"Action: Check BMC username and password in config file" in rvmc_job_logs.stdout'

    - name: Set output msg if BMC is unreachable.
      set_fact:
        failure_msg: >-
          Ping to BMC has failed.
          Check BMC values in install values file.
          Ensure you can ssh into BMC using these credentials.
          Err_code= ping_bmc
      when: '"Action: Check BMC ip address is pingable" in rvmc_job_logs.stdout'

    - name: Set output message if session creation fails
      set_fact:
        failure_msg: >-
          Failed to connect to BMC.
          Check BMC credentials in install values file.
          Ensure you can ssh into BMC using these credentials.
          Err_code= bmc_cred
      when: '"Failed to Create session" in rvmc_job_logs.stdout'

    when: 'wait_for_rvmc.stdout == "failed"'

  when: wait_for_rvmc.stdout in ["failed", "complete", "timeout"]

- name: Set failure message if the job is not found
  set_fact:
    failure_msg: >-
      The job may have been evicted due to insufficient System Resources.
      Please check alarms and system resources.
  when: wait_for_rvmc.stdout == "not found"

- name: Set failure message if the job is timeout
  set_fact:
    failure_msg: The rvmc job has timed out after extended wait and/or retry. Please check the BMC.
  when: wait_for_rvmc.stdout == "timeout"
