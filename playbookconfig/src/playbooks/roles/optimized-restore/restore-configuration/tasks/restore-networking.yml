---
#
# Copyright (c) 2022 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# SUB-TASKS DESCRIPTION:
#   Setup networking so that restoring can be completed.
#   Networking should match the state it would be in after
#   completing a typical bootstrapping, so that unlocking can
#   be performed immediately after optimized restore is complete.

# Bring up networking, meant to replicate state during bootstrapping
- name: Restore networking
  block:
    - name: Remove network configuration files
      file:
        path: "{{ network_scripts_location }}"
        state: absent

    - name: Restore network configuration files
      command: "tar -C / -xpf {{ platform_backup_fqpn }} --overwrite {{ network_scripts_location.lstrip('/') }}"

    - name: Get IPv4 default gateway
      command: ip -4 route show default
      register: ipv4_route

    - name: Get IPv6 default gateway
      command: ip -6 route show default
      register: ipv6_route

    - name: Extract gateway interfaces
      set_fact:
        interfaces: "{{
            [ipv4_route.stdout.strip(), ipv6_route.stdout.strip()]
            | reject('equalto', '') | map('regex_replace', query, '--exclude==\\1') | list
          }}"
      vars:
        query: '^.*dev (\w+).*$'

    - name: Shutdown all network interfaces excluding loopback
      command: ifdown -a --exclude=lo

    - name: Bring up original networking
      shell:
        cmd: "ifup $(ls ifcfg-* | sed 's/ifcfg-//') {{ ' '.join(interfaces) }}"
        chdir: /etc/network/interfaces.d/

    - name: Bring up temporary addresses
      block:
      - name: Lookup controller host addresses
        shell: "grep -E '{{ '|'.join(temporary_address_names) }}' /etc/hosts | awk '{print $1}'"
        register: host_addresses

      - name: Configure controller host address
        command: "ip addr add {{ item }} dev lo scope host"
        loop: "{{ host_addresses.stdout_lines }}"
