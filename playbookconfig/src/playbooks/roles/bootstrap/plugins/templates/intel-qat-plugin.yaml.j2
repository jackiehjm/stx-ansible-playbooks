# Intel QAT device plugin
# Based on:
# https://github.com/intel/intel-device-plugins-for-kubernetes/blob/main/deployments/qat_plugin/base/intel-qat-plugin.yaml
#
# The following modifications have been made:
#  - A nodeSelector of 'intelqat' has been added to ensure the qat device plugin
#   pods only run on appropriately labelled nodes.
#  - The daemonset is modified to tolerate all NoSchedule taints

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: intel-device-plugin
  namespace: kube-system
imagePullSecrets:
  - name: registry-local-secret
---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: intel-qat-plugin
  namespace: kube-system
  labels:
    app: intel-qat-plugin
spec:
  selector:
    matchLabels:
      app: intel-qat-plugin
  template:
    metadata:
      labels:
        app: intel-qat-plugin
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
        intelqat: enabled
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: intel-device-plugin
      automountServiceAccountToken: false
      imagePullSecrets:
        - name: registry-local-secret
      initContainers:
      - name: intel-qat-initcontainer
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: "{{ local_registry }}/{{ intel_qat_initcontainer_img }}"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: true
        volumeMounts:
        - name: sysfs
          mountPath: /sys
        - name: qat-config
          mountPath: /qat-init/conf
      containers:
      - name: intel-qat-plugin
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: "{{ local_registry }}/{{ intel_qat_plugin_img }}"
        securityContext:
          seLinuxOptions:
            type: "container_device_plugin_t"
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: devdir
          mountPath: /dev/vfio
          readOnly: true
        - name: debugfsdir
          mountPath: /sys/kernel/debug
          readOnly: true
        - name: pcidir
          mountPath: /sys/bus/pci
        - name: kubeletsockets
          mountPath: /var/lib/kubelet/device-plugins
        - name: qat-config
          mountPath: /qat-init/conf
      volumes:
      - name: devdir
        hostPath:
          path: /dev/vfio
      - name: debugfsdir
        hostPath:
          path: /sys/kernel/debug
      - name: pcidir
        hostPath:
          path: /sys/bus/pci
      - name: kubeletsockets
        hostPath:
          path: /var/lib/kubelet/device-plugins
      - name: sysfs
        hostPath:
          path: /sys
      - name: qat-config
        configMap:
          name: qat-config
          optional: true
          defaultMode: 0440
