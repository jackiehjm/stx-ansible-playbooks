---
#
# Copyright (c) 2020-21 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to bring up system applications
#

# we need to restart sysinv conductor here because it seem to be caching old data
# this prevents it from interacting with a fresh kubernetes cluster. For example,
# if the user changes OAM network and forces the kubernetes cluster to be torn down
# and brought up again.
- name: Restart sysinv conductor
  systemd:
    name: sysinv-conductor
    state: restarted

- pause:
    seconds: 30

- name: Upload and apply applications
  include: upload_and_apply_application.yml application={{ item }}
  with_items: "{{ applications }}"
  when: mode != 'restore'

# While Armada indicates pods are ready, some bugs were raised indicating
# cert-manager webhook validation is not fully setup. Adding an indirect check
# here to test a certificate issuer
- name: Test cert-manager resource creation
  import_tasks: test_cert_manager_creation.yml
  when: mode != 'restore'

# Create a generic namespace to be shared by deployed platform resources as needed
# and copy default-registry-key
- name: Create 'deployment' namespace
  shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create namespace deployment --dry-run -o yaml |
          kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f -

- name: Get deployment namespace default registry key
  command: >-
    kubectl --kubeconfig=/etc/kubernetes/admin.conf get secret default-registry-key --namespace=deployment
  failed_when: false
  register: get_deployment_default_registry_key

- name: Copy default-registry-key to deployment namespace
  shell: >-
    kubectl get secret default-registry-key --namespace=kube-system -o yaml
    | sed 's/namespace: kube-system/namespace: deployment/'
    | kubectl apply --namespace=deployment -f -
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  when: get_deployment_default_registry_key.stdout == ""

# Create DC CA and set up subcloud admin endpoint certificates for bootstrap mode.
- block:
  - name: Create distributed cloud CA
    include_tasks: create_dc_ca.yml
    when: distributed_cloud_role == 'systemcontroller'

  - name: Set up subcloud admin endpoints certificates if host is a subcloud
    include_role:
      name: common/setup-subcloud-adminep-certs
    vars:
      ansible_become: yes
    when: distributed_cloud_role == 'subcloud'

  when: mode == 'bootstrap'

- name: Remove config file from previous play
  file:
    path: "{{ last_bootstrap_config_file }}"
    state: absent

- name: Save the current system and network config for reference in subsequent replays
  lineinfile:
    # This file should be cleared upon host reboot
    path: "{{ last_bootstrap_config_file }}"
    line: "{{ item }}"
    create: yes
  with_items:
    - "prev_system_mode: {{ system_mode }}"
    - "prev_timezone: {{ timezone }}"
    - "prev_distributed_cloud_role: {{ distributed_cloud_role }}"
    - "prev_management_dynamic_address_allocation: {{ management_dynamic_address_allocation }}"
    - "prev_cluster_host_dynamic_address_allocation: {{ cluster_host_dynamic_address_allocation }}"
    - "prev_pxeboot_subnet: {{ pxeboot_subnet }}"
    - "prev_management_subnet: {{ management_subnet }}"
    - "prev_cluster_host_subnet: {{ cluster_host_subnet }}"
    - "prev_cluster_pod_subnet: {{ cluster_pod_subnet }}"
    - "prev_cluster_service_subnet: {{ cluster_service_subnet }}"
    - "prev_external_oam_subnet: {{ external_oam_subnet }}"
    - "prev_external_oam_gateway_address: {{ external_oam_gateway_address }}"
    - "prev_external_oam_floating_address: {{ external_oam_floating_address }}"
    - "prev_management_multicast_subnet: {{ management_multicast_subnet }}"
    - "prev_dns_servers: {{ dns_servers | join(',') }}"
    - "prev_docker_http_proxy: {{ docker_http_proxy }}"
    - "prev_docker_https_proxy: {{ docker_https_proxy }}"
    - "prev_docker_no_proxy: {{ docker_no_proxy | sort | join(',') }}"
    # Store the addresses as values determined in prepare-env stage not as merged values in
    # validate-config stage as the latter requires subnet validation.
    - "prev_pxeboot_start_address: {{  pxeboot_start_address }}"
    - "prev_pxeboot_end_address: {{  pxeboot_end_address }}"
    - "prev_management_start_address: {{  management_start_address }}"
    - "prev_management_end_address: {{  management_end_address }}"
    - "prev_cluster_host_start_address: {{ cluster_host_start_address }}"
    - "prev_cluster_host_end_address: {{ cluster_host_end_address }}"
    - "prev_cluster_pod_start_address: {{ cluster_pod_start_address }}"
    - "prev_cluster_pod_end_address: {{ cluster_pod_end_address }}"
    - "prev_cluster_service_start_address: {{ cluster_service_start_address }}"
    - "prev_cluster_service_end_address:  {{ cluster_service_end_address }}"
    - "prev_external_oam_start_address: {{ external_oam_start_address }}"
    - "prev_external_oam_end_address: {{ external_oam_end_address }}"
    - "prev_management_multicast_start_address: {{ management_multicast_start_address }}"
    - "prev_management_multicast_end_address: {{ management_multicast_end_address }}"
    - "prev_external_oam_node_0_address: {{ external_oam_node_0_address }}"
    - "prev_external_oam_node_1_address: {{ external_oam_node_1_address }}"
    - "prev_apiserver_cert_sans: {{ apiserver_cert_sans | to_yaml }}"
    - "prev_k8s_root_ca_cert: {{ k8s_root_ca_cert }}"
    - "prev_k8s_root_ca_key: {{ k8s_root_ca_key }}"
    - "prev_apiserver_oidc: {{ apiserver_oidc | to_yaml }}"
    - "prev_etcd_root_ca_cert: {{ etcd_root_ca_cert }}"
    - "prev_etcd_root_ca_key: {{ etcd_root_ca_key }}"
    # Nested dictionaries are picky about having things on the same line
    - "prev_docker_registries: "
    - "{{ docker_registries | to_yaml }}"

- name: Mark the bootstrap as completed
  file:
    path: "{{ bootstrap_completed_flag }}"
    state: touch
