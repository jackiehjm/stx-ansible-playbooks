---
#
# Copyright (c) 2019-2020 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# SUB-TASKS DESCRIPTION:
#   - Save Postgres config to replicated filesystem for mate
#   - Save branding config to replicated filesystem
#   - Set up symlink for PXE boot
#   - Add default security feature to kernel command line parameters
#   - Resize some filesytems
#

- name: Set Postgres, PXE, branding config directory fact
  set_fact:
    postgres_config_dir: "{{ config_permdir + '/postgresql' }}"
    pxe_config_dir: "{{ config_permdir + '/pxelinux.cfg' }}"
    branding_config_dir: "{{ config_permdir + '/branding' }}"
    ssl_ca_certs_dir: "{{ config_permdir + '/ssl_ca' }}"

- debug:
    msg: >-
      postgres_config_dir: {{ postgres_config_dir }}
      pxe_config_dir: {{ pxe_config_dir }}
      branding_config_dir: {{ branding_config_dir }}
      ssl_ca_certs_dir: {{ ssl_ca_certs_dir }}

- name: Ensure Postres, PXE config directories exist
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ postgres_config_dir }}"
    - "{{ pxe_config_dir }}"

- name: Ensure SSL CA certificates directory exists
  file:
    path: "{{ ssl_ca_certs_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Get list of Postgres conf files
  find:
    paths: /etc/postgresql
    patterns: '*.conf'
  register: postgres_result

- name: Copy postgres conf files for mate
  copy:
    src: "{{ item.path }}"
    dest: "{{ postgres_config_dir }}"
    mode: preserve
    owner: postgres
    group: postgres
    remote_src: yes
  with_items: "{{ postgres_result.files }}"

- name: Create a symlink to PXE config files
  file:
    src: "{{ pxe_config_dir }}"
    dest: /pxeboot/pxelinux.cfg
    state: link

- name: Check if copying of branding files for mate is required
  stat:
    path: /opt/branding
  register: branding_result

- block:
    - name: Ensure branding config directory exists
      file:
        path: "{{ branding_config_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Check if branding tar files exist (there should be only one)
      find:
        paths: /opt/branding
        patterns: '*.tgz'
      register: bt_result

    - name: Copy branding tar files
      copy:
        src: "{{ item.path }}"
        dest: "{{ branding_config_dir }}"
        remote_src: yes
        mode: preserve
      with_items:
        - "{{ bt_result.files }}"

  when: branding_result.stat.exists and branding_result.stat.isdir

- name: Get grub default kernel
  command: grubby --default-kernel
  register: grub_kernel_output

- name: Add default security feature to kernel parameters
  command: "{{ item }}"
  with_items:
    - "grubby --update-kernel={{ grub_kernel_output.stdout_lines[0] }} --args='{{ default_security_feature }}'"

- block:
  - name: Resize logical volumes
    include: resize_logical_volume.yml
    with_items:
    - { size: "10G", lv: "/dev/cgts-vg/pgsql-lv" }
    - { size: "10G", lv: "/dev/cgts-vg/platform-lv" }
    - { size: "5G", lv: "/dev/cgts-vg/etcd-lv" }
    - { size: "16G", lv: "/dev/cgts-vg/dockerdistribution-lv" }
    - { size: "20G", lv: "/dev/cgts-vg/backup-lv" }
    - { size: "30G", lv: "/dev/cgts-vg/docker-lv" }
    - { size: "10G", lv: "/dev/cgts-vg/kubelet-lv" }
    - { size: "16G", lv: "/dev/cgts-vg/scratch-lv" }

  - name: Resize filesystems (default)
    command: "{{ item }}"
    failed_when: false
    with_items:
      - resize2fs /dev/cgts-vg/backup-lv
      - xfs_growfs /dev/cgts-vg/docker-lv
      - resize2fs /dev/cgts-vg/kubelet-lv
      - resize2fs /dev/cgts-vg/scratch-lv

  - name: Resize drbd filesystems (default)
    include: resize_drbd.yml
    with_items:
    - { resource: "drbd-pgsql/0", device: "drbd0" }
    - { resource: "drbd-platform/0", device: "drbd2" }
    - { resource: "drbd-etcd/0", device: "drbd7" }
    - { resource: "drbd-dockerdistribution/0", device: "drbd8" }

  when: root_disk_size|int >= minimum_small_root_disk_size

- block:
  - name: Further resize if root disk size is larger than 240G
    include: resize_logical_volume.yml
    with_items:
      - { size: "20G", lv: "/dev/cgts-vg/pgsql-lv" }
      - { size: "25G", lv: "/dev/cgts-vg/backup-lv" }

  - name: Resize filesystems
    command: "{{ item }}"
    failed_when: false
    with_items:
      - resize2fs /dev/cgts-vg/backup-lv

  - name: Further resize drbd filesystems
    include: resize_drbd.yml
    with_items:
    - { resource: "drbd-pgsql/0", device: "drbd0" }

  when: root_disk_size|int > small_root_disk_size
