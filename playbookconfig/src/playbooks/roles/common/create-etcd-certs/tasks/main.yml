---
#
# Copyright (c) 2020 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright (c) 2021 Wind River Systems, Inc.
#
# ROLE DESCRIPTION:
#   Create etcd server and client certs and key.

- name: Generate private key for etcd server and client
  openssl_privatekey:
    path: "/etc/etcd/{{ item }}.key"
    type: RSA
    size: 4096
    state: present
    force: true
  with_items:
    - "etcd-server"
    - "apiserver-etcd-client"
    - "etcd-client"

- name: Generate CSRs for etcd server and client
  openssl_csr:
    path: "/etc/etcd/{{ item }}.csr"
    privatekey_path: "/etc/etcd/{{ item }}.key"
    common_name: "{{ item }}"
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name:
      - IP:{{ cluster_floating_address }}
      - IP:127.0.0.1
    force: true
  with_items:
    - "etcd-server"
    - "apiserver-etcd-client"

- name: Generate CSRs for etcd root client
  openssl_csr:
    path: "/etc/etcd/{{ item }}.csr"
    privatekey_path: "/etc/etcd/{{ item }}.key"
    common_name: "root"
    key_usage:
      - digitalSignature
    extended_key_usage:
      - serverAuth
      - clientAuth
    force: true
  with_items:
    - "etcd-client"

- name: Define values for etcd certificate and key
  set_fact:
    etcd_root_ca_cert: "{{ etcd_root_ca_cert | default('') }}"
    etcd_root_ca_key: "{{ etcd_root_ca_key | default('') }}"

- name: Setup dictionary of etcd certificates to install
  set_fact:
    etcd_ca_files: { ca.crt: "{{etcd_root_ca_cert}}", ca.key: "{{etcd_root_ca_key}}" }
  when:
    - (etcd_root_ca_cert)
    - (etcd_root_ca_key)

- name: Copy etcd root ca certificates
  copy:
    src: "{{ item.value }}"
    dest: "/etc/etcd/{{item.key}}"
  with_dict: "{{ etcd_ca_files }}"
  when: etcd_ca_files is defined

- block:
  - name: Generate private key for etcd-ca
    openssl_privatekey:
      path: "/etc/etcd/ca.key"
      type: RSA
      size: 4096
      state: present
      force: true

  - name: Generate CSR for etcd-ca
    openssl_csr:
      path: "/etc/etcd/ca.csr"
      privatekey_path: "/etc/etcd/ca.key"
      common_name: etcd
      basic_constraints:
        - CA:TRUE
        - pathlen:1
      basic_constraints_critical: True
      key_usage:
        - keyCertSign
        - digitalSignature
        - keyEncipherment
      force: true

  - name: Generate self-signed CA certificate for etcd-ca
    openssl_certificate:
      path: "/etc/etcd/ca.crt"
      privatekey_path: "/etc/etcd/ca.key"
      csr_path: "/etc/etcd/ca.csr"
      provider: selfsigned
      force: true
  when: etcd_root_ca_cert == ''

- name: Get date 1 year from now in ASN.1 TIME format (YYYYMMDDHHMMSSZ)
  command: "date -u -d 'next year' +'%Y%m%d%H%M%SZ'"
  register: next_year_date

- name: Generate certs signed with etcd CA certificate
  openssl_certificate:
    path: "/etc/etcd/{{ item }}.crt"
    csr_path: "/etc/etcd/{{ item }}.csr"
    ownca_path: "/etc/etcd/ca.crt"
    ownca_privatekey_path: "/etc/etcd/ca.key"
    ownca_not_after: "{{ next_year_date.stdout }}"
    provider: ownca
    force: true
  with_items:
    - "etcd-server"
    - "apiserver-etcd-client"
    - "etcd-client"
