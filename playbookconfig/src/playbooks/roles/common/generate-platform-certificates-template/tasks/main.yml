---
#
# Copyright (c) 2022-2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# These tasks get information from the running system and use it to
# generate a certificate spec file which is going to be applied to
# kubernetes at a later step
#
- name: Validate subject fields
  include_role:
    name: common/validate-cert-subject-fields

- name: Get address pool information for system
  shell: |
    source /etc/platform/openrc; system addrpool-list --nowrap
  register: address_table

- name: Get floating management ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "management" { print $14 }'
  register: management_floating_ip

- name: Get controller0 floating management ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "management" { print $16 }'
  register: management_c0_ip

- name: Get controller1 floating management ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "management" { print $18 }'
  register: management_c1_ip

- name: Get floating oam ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "oam" { print $14 }'
  register: oam_ip

- name: Get floating kubernetes cluster ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "cluster-host-subnet" { print $14 }'
  register: kubernetes_cluster_floating_ip

- name: Get controller0 kubernetes cluster ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "cluster-host-subnet" { print $16 }'
  register: kubernetes_cluster_c0_ip

- name: Get controller1 kubernetes cluster ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "cluster-host-subnet" { print $18 }'
  register: kubernetes_cluster_c1_ip

- name: Get floating admin ip
  shell: |
    echo "{{ address_table.stdout }}" | awk  '$4 == "admin" { print $14 }'
  register: admin_floating_ip

- name: Get region name
  shell: |
    source /etc/platform/openrc
    system show | grep region_name | awk '{ print $4 }'
  register: region_name_register

- name: Get distributed_cloud role
  shell: |
    source /etc/platform/openrc
    system show | grep distributed_cloud_role | awk '{ print $4 }'
  register: dc_role

- name: Get cert-manager api version
  shell: |
    kubectl --kubeconfig=/etc/kubernetes/admin.conf api-versions | grep cert-manager.io | sort -n | tail -1
  register: cert_manager_api_version

- name: Generate kubernetes yaml for cert-manager resources
  template:
    src: platform_certificates.yml.j2
    dest: "{{ destination }}"
    mode: '0640'
  become: yes
