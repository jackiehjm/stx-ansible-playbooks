---
#
# Copyright (c) 2021 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
- block:
  - name: Backup mode variable
    set_fact:
      previous_mode: "{{ mode }}"

  when: mode is defined

- name: Set kubernetes long version
  set_fact:
    kubernetes_long_version: "{{ kubernetes_version if kubernetes_version.startswith('v')
                              else 'v' + kubernetes_version }}"

- name: Initialize variables
  set_fact:
    overrides_file: "/tmp/upgrade_overrides.yaml"
    mode: "upgrade_k8s_networking"

- name: Fail if kubernetes_version is not defined
  fail: msg="The mandatory parameter kubernetes_version is not defined."
  when: kubernetes_version is not defined

- name: Create the upgrade overrides file
  command: "/usr/bin/sysinv-utils create-host-overrides {{ overrides_file }}"

- name: Read the overrides variables
  include_vars:
    file: "{{ overrides_file }}"

- name: Set networking facts
  set_fact:
    kubelet_cni_bin_dir: "/usr/libexec/cni"
    kubelet_vol_plugin_dir: "/usr/libexec/kubernetes/kubelet-plugins/volume/exec/"
    cluster_network_ipv4: "{{ cluster_pod_subnet | ipv4 }}"
    cluster_network_ipv6: "{{ cluster_pod_subnet | ipv6 }}"
    cluster_floating_address: "{{ cluster_host_floating_address }}"
    controller_0_cluster_host: "{{ cluster_host_node_0_address }}"

- name: Upgrade k8s networking images
  import_role:
    name: common/push-docker-images

- name: Create Calico config file
  template:
    src: "roles/bootstrap/bringup-essential-services/templates/k8s-{{ kubernetes_long_version }}/calico-cni.yaml.j2"
    dest: /etc/kubernetes/update_calico.yaml

- name: Update Calico Networking
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/update_calico.yaml"

- name: Create Multus config file
  template:
    src: "roles/bootstrap/bringup-essential-services/templates/k8s-{{ kubernetes_long_version }}/multus-cni.yaml.j2"
    dest: /etc/kubernetes/update_multus.yaml

- name: Update Multus Networking
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/update_multus.yaml"

- name: Create SRIOV Networking config file
  template:
    src: "roles/bootstrap/bringup-essential-services/templates/k8s-{{ kubernetes_long_version }}/sriov-cni.yaml.j2"
    dest: /etc/kubernetes/update_sriov-cni.yaml

- name: Update SRIOV Networking
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/update_sriov-cni.yaml"

- name: Create SRIOV device plugin config file
  template:
    src: "roles/bootstrap/bringup-essential-services/templates/k8s-{{ kubernetes_long_version }}/sriov-plugin.yaml.j2"
    dest: /etc/kubernetes/update_sriovdp-daemonset.yaml

- name: Update SRIOV device plugin
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/update_sriovdp-daemonset.yaml"

- name: Create Coredns config file
  template:
    src: "roles/bootstrap/bringup-essential-services/templates/coredns.yaml.j2"
    dest: /etc/kubernetes/update_coredns.yaml

- name: Update Coredns config map
  command: "kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/update_coredns.yaml"

- block:
  - name: Restore mode variable
    set_fact:
      mode: "{{ previous_mode }}"

  when: previous_mode is defined
