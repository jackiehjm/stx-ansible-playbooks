---
#
# Copyright (c) 2020-2021 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role performs checks to ensure the target is compatible with the playbook
#   and is ready for the next step.
#
- set_fact:
    check_system: "{{ check_system | default(false) }}"
    check_load: "{{ check_load | default(false) }}"
    check_bootstrap_address: "{{ check_bootstrap_address | default(false) }}"
    check_patches: "{{ check_patches | default(false) }}"

- name: Retrieve software version number
  # lookup module does not work with /etc/build.info as it does not have ini
  # format. Resort to shell source.
  shell: source /etc/build.info; echo $SW_VERSION
  register: sw_version_result

- name: Fail if software version is not defined
  fail:
    msg: "SW_VERSION is missing in /etc/build.info"
  when: sw_version_result.stdout_lines|length == 0

- name: Retrieve system type
  shell: source /etc/platform/platform.conf; echo $system_type
  register: system_type_result

- name: Fail if system type is not defined
  fail:
    msg: "system_type is missing in /etc/platform/platform.conf"
  when: system_type_result.stdout_lines|length == 0

- name: Set host software version, system type
  set_fact:
    host_software_version: "{{ sw_version_result.stdout }}"
    host_system_type: "{{ system_type_result.stdout }}"

- name: Fail if host software version is not supported by this playbook
  fail:
    msg: "This playbook is not compatible with StarlingX software version {{ host_software_version }}."
  when: host_software_version not in supported_release_versions

# check_system validation, e.g. right after remote fresh install
- name: Check if the system is ready
  command: "systemctl is-active multi-user.target"
  register: check_active
  retries: 30
  delay: 40
  until: check_active.rc == 0
  no_log: true
  when: check_system

# check_load validation, e.g. prior to subcloud upgrade/restore of non-Redfish subcloud
- block:
  - name: Fail if the host was not installed with the right software version
    fail:
      msg: >
        This host is running {{ host_software_version }}. The expected software
        version is {{ software_version }}.
    when: host_software_version != software_version
  when: check_load and software_version is defined

# check_bootstrap_address - e.g. prior to subcloud restore of non-Redfish subcloud
- block:
  - name: Set host address to IPv4 address if available
    set_fact:
      host_address: "{{ ansible_default_ipv4['address'] }}"
    when: ansible_default_ipv4.keys()|length != 0

  - name: Set host address to IPv6 address if available
    set_fact:
      host_address: "{{ ansible_default_ipv6['address'] }}"
    when: ansible_default_ipv6.keys()|length != 0

  - name: Fail if the bootstrap address is incorrect
    fail:
      msg: >
        The host bootstrap address is {{ host_address }}. The expected address
        is {{ bootstrap_address }}.
    when: host_address != bootstrap_address
  when: check_bootstrap_address

# check_patches validation - e.g. prior to subcloud restore of non-Redfish subcloud
- block:
  - name: Query list of applied patches on master
    shell: sw-patch query|awk '($4 == "Applied" || $4 == "Partial-Applied") {print $1}'
    register: master_patch_list
    delegate_to: localhost

  - name: Query list of applied patches on the target
    shell: sw-patch query|awk '($4 == "Applied" || $4 == "Partial-Applied") {print $1}'
    register: target_patch_list

  - name: Fail if the applied patch list on target differs from that on the master
    fail:
      msg: >-
        The applied patches ({{ target_patch_list.stdout_lines }}) are not the same on the
        master ({{ master_patch_list.stdout_lines }})
    when: target_patch_list.stdout_lines != master_patch_list.stdout_lines
  when: check_patches

# Now that the host has been validated, set the official software version, system type facts
- name: Set software version, system type config path facts
  set_fact:
    software_version: "{{ host_software_version }}"
    system_type: "{{ host_system_type }}"
