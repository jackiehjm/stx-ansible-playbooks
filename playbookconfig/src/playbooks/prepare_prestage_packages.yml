---
#
# Copyright (c) 2022 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# This playbook prepares the ostree repo that is to be copied to the subcloud(s)
# in the subsequent phase of prestage.
#
# Usage:
#   ansible-playbook prepare_prestage_packages.yml -i <inventory-file> \
#       -e "current_software_version=<release-number> \
#           previous_software_version=<release-number>"

- hosts: all
  gather_facts: no

  vars:
    prestaging_repo: "/var/run/prestaging_repo"
    prestage_preparation_completed_file: "{{ prestaging_repo }}/.prestage_preparation_completed"

  tasks:
    - name: Retrieve the distributed cloud role
      shell: source /etc/platform/platform.conf; echo $distributed_cloud_role
      register: dc_role
      connection: local

    - name: Fail if the playbook is not run on the system controller
      fail:
        msg: >
          The prepare_prestage_packages.yml playbook must be run on the
          system controller of a distributed cloud system.
      when: dc_role.stdout != 'systemcontroller'

    - name: Fail if mandatory parameters are not specified
      fail:
        msg: >
          Please specify the values of previous_software_version and
          current_software_version.
      when: (previous_software_version is undefined or
             current_software_version is undefined)

    - name: Get the system controller software version
      shell: source /etc/platform/platform.conf; echo $sw_version
      register: system_controller_sw_version
      connection: local

    - name: Fail if the current_software_version is invalid
      fail:
        msg: "The expected current_software_version value is {{ system_controller_sw_version.stdout }}"
      when: current_software_version != system_controller_sw_version.stdout

    - name: Fail if the previous_software_version is higher than current_software_version
      fail:
        msg: "The previous_software_version must be lower than {{ current_software_version }}."
      when: previous_software_version is version(current_software_version, '>=')

    - name: Look for prestage_preparation_completed flag
      stat:
        path: "{{ prestage_preparation_completed_file }}"
      connection: local
      register: prestage_preparation_completed_flag

    - name: Skip the play if shared packages data have been prepared before
      meta: end_play
      when: prestage_preparation_completed_flag.stat.exists

    - block:
      - name: Ensure prestaging repo exists
        file:
          path: "{{ prestaging_repo }}"
          owner: root
          group: root
          state: directory
          mode: 0755
          recurse: yes
        become: yes

      - name: Prepare prestaging ostree repo on the system controller
        include_role:
          name: prestage/prepare-ostree-repo
        vars:
          release_id: "{{ current_software_version }}"
          repo_path: "{{ prestaging_repo }}"

      - name: Set prestage_preparation_completed flag
        file:
          path: "{{ prestage_preparation_completed_file }}"
          state: touch
        become: yes

      delegate_to: localhost

      rescue:
        - name: Clean up the prestaging repo
          file:
            path: "{{ prestaging_repo }}"
            state: absent
          connection: local
          become: yes

        - name: Fail the play after cleanup
          fail:
            msg: >-
              Prestage ostree repo preparation failed.
              Please check ansible logs for the last failed task.
